Index: trunk/src/gcuserview.cpp
===================================================================
--- trunk.orig/src/gcuserview.cpp	2007-11-22 20:25:56.000000000 +0200
+++ trunk/src/gcuserview.cpp	2007-11-22 20:29:05.000000000 +0200
@@ -24,6 +24,7 @@
 #include <Q3Header>
 #include <Q3TextDrag>
 #include <Q3PopupMenu>
+#include <QTimer>
 
 #include "capsmanager.h"
 #include "psitooltip.h"
@@ -143,6 +144,7 @@
 	i = new GCUserViewGroupItem(this, tr("Moderators"), 1);
 	i->setOpen(true);
 
+	connect(this, SIGNAL(clicked(Q3ListViewItem *)), SLOT(qlv_clicked(Q3ListViewItem *)));
 	connect(this, SIGNAL(doubleClicked(Q3ListViewItem *)), SLOT(qlv_doubleClicked(Q3ListViewItem *)));
 	connect(this, SIGNAL(contextMenuRequested(Q3ListViewItem *, const QPoint &, int)), SLOT(qlv_contextMenuRequested(Q3ListViewItem *, const QPoint &, int)));
 }
@@ -304,12 +306,31 @@
 	return Q3ListView::event(e);
 }
 
+void GCUserView::qlv_clicked(Q3ListViewItem* i)
+{
+	if (!i || !i->parent())
+		return;
+
+	GCUserViewItem *lvi = (GCUserViewItem *)i;
+	queuedNick=lvi->text(0);
+	QTimer::singleShot(300, this, SLOT(qlv_timer()));
+}
+
+void GCUserView::qlv_timer()
+{
+	if (!queuedNick.isEmpty())
+	emit itemClicked(queuedNick);
+	queuedNick.clear();
+}
+
 void GCUserView::qlv_doubleClicked(Q3ListViewItem *i)
 {
 	if(!i || !i->parent())
 		return;
 
+	queuedNick.clear();
 	GCUserViewItem *lvi = (GCUserViewItem *)i;
+
 	if(PsiOptions::instance()->getOption("options.messages.default-outgoing-message-type").toString() == "message")
 		action(lvi->text(0), lvi->s, 0);
 	else
@@ -321,6 +342,7 @@
 	if(!i || !i->parent() || !gcDlg_)
 		return;
 
+	queuedNick.clear();
 	QPointer<GCUserViewItem> lvi = (GCUserViewItem *)i;
 	bool self = gcDlg_->nick() == i->text(0);
 	GCUserViewItem* c = (GCUserViewItem*) findEntry(gcDlg_->nick());
Index: trunk/src/gcuserview.h
===================================================================
--- trunk.orig/src/gcuserview.h	2007-11-22 20:24:30.000000000 +0200
+++ trunk/src/gcuserview.h	2007-11-22 20:29:05.000000000 +0200
@@ -83,13 +83,17 @@
 
 signals:
 	void action(const QString &, const Status &, int);
+	void itemClicked(const QString&);
 
 private slots:
+	void qlv_clicked(Q3ListViewItem *);
 	void qlv_doubleClicked(Q3ListViewItem *);
 	void qlv_contextMenuRequested(Q3ListViewItem *, const QPoint &, int);
+	void qlv_timer();
 
 private:
 	GCMainDlg* gcDlg_;
+	QString queuedNick;
 };
 
 #endif
Index: trunk/src/groupchatdlg.cpp
===================================================================
--- trunk.orig/src/groupchatdlg.cpp	2007-11-22 20:28:56.000000000 +0200
+++ trunk/src/groupchatdlg.cpp	2007-11-22 20:29:05.000000000 +0200
@@ -505,6 +505,7 @@
 #endif
 
 	ui_.lv_users->setMainDlg(this);
+	connect(ui_.lv_users, SIGNAL(itemClicked(const QString&)), SLOT(lv_itemClicked(const QString&)));
 	connect(ui_.lv_users, SIGNAL(action(const QString &, const Status &, int)), SLOT(lv_action(const QString &, const Status &, int)));
 
 	d->act_clear = new IconAction (tr("Clear chat window"), "psi/clearChat", tr("Clear chat window"), 0, this);
@@ -1412,6 +1413,16 @@
 	ui_.lv_users->updateAll();
 }
 
+void GCMainDlg::lv_itemClicked(const QString& nick)
+{
+	QString toInsert=nick;
+	if (ui_.mle->chatEdit()->document()->isEmpty())
+		toInsert+=':';
+	toInsert+=' ';
+	ui_.mle->chatEdit()->insert(toInsert);
+	ui_.mle->chatEdit()->setFocus();
+}
+
 void GCMainDlg::lv_action(const QString &nick, const Status &s, int x)
 {
 	if(x == 0) {
Index: trunk/src/groupchatdlg.h
===================================================================
--- trunk.orig/src/groupchatdlg.h	2007-11-22 20:24:54.000000000 +0200
+++ trunk/src/groupchatdlg.h	2007-11-22 20:29:05.000000000 +0200
@@ -115,6 +115,7 @@
 	void pa_updatedActivity();
 	void goDisc();
 	void goConn();
+	void lv_itemClicked(const QString& s);
 	void lv_action(const QString &, const Status &, int);
 	void doClear();
 	void doClearButton();
